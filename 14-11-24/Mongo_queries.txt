/* 
Write a MongoDB query to count the number of people above 35 years living in 
"Bangalore" or "Mumbai".

collection: indianPeople

Sample Document:
----------------
{ 
    "name": "Priya Kumar", 
    "age": 32, 
    "gender": "Female", 
    "phone_number": "9876543210", 
    "location": "Mumbai", 
    "salary": 50000
}

Note: To write the query, use printjson() method from 'mongosh' module
    e.g., To display all the documents from 'marks' collection
        => printjson( db.marks.find())
    Where,
    db => database connection object
    marks => collections name
    find => method to retrieve all the matched docuemnts

*/
printjson(db.indianPeople.countDocuments({$and:
[{"age":{"$gt":35}},
{$or:[{"location":"Bangalore"},{"location":"Mumbai"}]}]
}));


/* 
Write a MongoDB query to find people below 40 years and display location and salary, 
sort them by location in descending order, and limit the result to 5 people.

collection: indianPeople

Sample Document:
----------------
{ 
    "name": "Priya Kumar", 
    "age": 32, 
    "gender": "Female", 
    "phone_number": "9876543210", 
    "location": "Mumbai", 
    "salary": 50000
}

Note: To write the query, use printjson() method from 'mongosh' module
    e.g., To display all the documents from 'marks' collection
        => printjson( db.marks.find())
    Where,
    db => database connection object
    marks => collections name
    find => method to retrieve all the matched docuemnts

*/
printjson(db.indianPeople.find({"age":{$lt:40}},{"location":1,"salary":1,"_id":0}).sort({"location":-1}).limit(5));

/* 
Write a MongoDB query to find all people whose names start with "A"

collection: indianPeople

Sample Document:
----------------
{ 
    "name": "Priya Kumar", 
    "age": 32, 
    "gender": "Female", 
    "phone_number": "9876543210", 
    "location": "Mumbai", 
    "salary": 50000
}

Note: To write the query, use printjson() method from 'mongosh' module
    e.g., To display all the documents from 'marks' collection
        => printjson( db.marks.find())
    Where,
    db => database connection object
    marks => collections name
    find => method to retrieve all the matched docuemnts

*/
printjson(db.indianPeople.find({"name":{$regex:/^A/}}));

/* 
Write a MongoDB query to find all people whose phone number ends with "234"

collection: indianPeople

Sample Document:
----------------
{ 
    "name": "Priya Kumar", 
    "age": 32, 
    "gender": "Female", 
    "phone_number": "9876543210", 
    "location": "Mumbai", 
    "salary": 50000
}

Note: To write the query, use printjson() method from 'mongosh' module
    e.g., To display all the documents from 'marks' collection
        => printjson( db.marks.find())
    Where,
    db => database connection object
    marks => collections name
    find => method to retrieve all the matched docuemnts

*/
printjson(db.indianPeople.find({"phone_number":{$regex:/234$/}}));

/* 
Write a MongoDB query to find people whose salary is more than 2000 times their age

collection: indianPeople

Sample Document:
----------------
{ 
    "name": "Priya Kumar", 
    "age": 32, 
    "gender": "Female", 
    "phone_number": "9876543210", 
    "location": "Mumbai", 
    "salary": 50000
}

Note: To write the query, use printjson() method from 'mongosh' module
    e.g., To display all the documents from 'marks' collection
        => printjson( db.marks.find())
    Where,
    db => database connection object
    marks => collections name
    find => method to retrieve all the matched docuemnts

*/
printjson(db.indianPeople.find({$expr:{$gt:["$salary",{$multiply:["$age",2000]}]}}));

/* 
Write a MongoDB query to find people whose name contains "ita" anywhere

collection: indianPeople

Sample Document:
----------------
{
    "name": "Priya Kumar", 
    "age": 32, 
    "gender": "Female", 
    "phone_number": "9876543210", 
    "location": "Mumbai", 
    "salary": 50000
}

Note: To write the query, use printjson() method from 'mongosh' module
    e.g., To display all the documents from 'marks' collection
        => printjson( db.marks.find())
    Where,
    db => database connection object
    marks => collections name
    find => method to retrieve all the matched docuemnts

*/
printjson(db.indianPeople.find({"name":{$regex:/ita/}}));

/* 
Write a MongoDB query to display the name and salary of the people whose salary
exceeds their current salary by at least 5000, after a 10% increase, sort the 
data in descending order of them salary.

collection: indianPeople

Sample Document:
----------------
{ 
    "name": "Priya Kumar", 
    "age": 32, 
    "gender": "Female", 
    "phone_number": "9876543210", 
    "location": "Mumbai", 
    "salary": 50000
}

Note: To write the query, use printjson() method from 'mongosh' module
    e.g., To display all the documents from 'marks' collection
        => printjson( db.marks.find())
    Where,
    db => database connection object
    marks => collections name
    find => method to retrieve all the matched docuemnts

*/
printjson(db.indianPeople.find({$expr:{$gte:[{$multiply:["$salary",0.1]},5000]}},{"name":1,"salary":1,"_id":0}).sort({"salary":-1}));